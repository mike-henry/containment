apply plugin: "java"

apply plugin: "application"




description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8


mainClassName = "com.spx.general.MainApplication"




buildscript {
  repositories {
    jcenter {
      url "http://jcenter.bintray.com/"
     }
     maven {
      url "https://plugins.gradle.org/m2/"
     }
     mavenLocal()
     mavenCentral()
  }

  dependencies {
    classpath 'com.github.onslip:gradle-one-jar:1.0.5'
    classpath "org.galaxx.gradle:jandex:1.0.2"
    classpath "io.freefair.gradle:lombok-plugin:3.1.4"
  }
}



allprojects {
group = "com.spx.app"

version = "0.8.0.1-SNAPSHOT"
 repositories {
   maven { url "http://repo.maven.apache.org/maven2" }
     mavenLocal()
     mavenCentral()
 }
}





subprojects  {
  apply plugin: "java"
  apply plugin: "io.freefair.lombok"
  apply plugin: "maven"
  buildscript {
    repositories {
      jcenter {
        url "http://jcenter.bintray.com/"
      }
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenLocal()
      mavenCentral()
    }

  dependencies {
    classpath 'com.github.onslip:gradle-one-jar:1.0.5'
    classpath "org.galaxx.gradle:jandex:1.0.2"
    classpath "io.freefair.gradle:lombok-plugin:3.1.4"
  }

  uploadArchives {
    repositories {
       mavenDeployer {
        repository(url: "$System.env.NEXUS_URL" ) {
          authentication(userName: "$System.env.NEXUS_USER", password: "$System.env.NEXUS_SECRET")
        }
        pom.version = version
        pom.artifactId = project.name
        pom.groupId = group
       }
    }
  }
}



 dependencies {
  implementation "javax.enterprise:cdi-api:2.0"
  implementation "javax.validation:validation-api:1.1.0.Final"
  implementation "org.projectlombok:lombok:1.16.20"
  testImplementation "org.needle4j:needle4j:2.3"
  testImplementation "org.mockito:mockito-all:1.9.5"
  testImplementation "info.cukes:cucumber-java:1.0.2"
  testImplementation "info.cukes:cucumber-junit:1.0.2"
  compileOnly  "org.slf4j:slf4j-api:1.7.7"
}
}
   
    
   
  

 jar {
   manifest {
     attributes(
       'Main-Class': mainClassName,
       'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' ')
     )
   }
 }




